# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go


variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.12' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code
  GO111MODULE: 'on'

stages:
 - stage: tests
   jobs:
   - job: Ubuntu_16_04
     pool:
       vmImage: 'ubuntu-16.04'
     steps:
     - script: |
         mkdir -p '$(GOBIN)'
         mkdir -p '$(GOPATH)/pkg'
         mkdir -p '$(modulePath)'
         shopt -s extglob
         shopt -s dotglob
         mv !(gopath) '$(modulePath)'
         echo '##vso[task.prependpath]$(GOBIN)'
         echo '##vso[task.prependpath]$(GOROOT)/bin'
       displayName: 'Set up the Go workspace'

     - script: |
         go version
         go get -v -t -d ./...
         go build -v .
       workingDirectory: '$(modulePath)'
       displayName: 'Build'

     - script: go run ./cmd/make test
       workingDirectory: '$(modulePath)'
       displayName: 'Run unit tests'

   - job: Ubuntu_18_04
     pool:
       vmImage: 'ubuntu-18.04'
     steps:
     - script: |
         mkdir -p '$(GOBIN)'
         mkdir -p '$(GOPATH)/pkg'
         mkdir -p '$(modulePath)'
         shopt -s extglob
         shopt -s dotglob
         mv !(gopath) '$(modulePath)'
         echo '##vso[task.prependpath]$(GOBIN)'
         echo '##vso[task.prependpath]$(GOROOT)/bin'
       displayName: 'Set up the Go workspace'

     - script: |
         go version
         go get -v -t -d ./...
         go build -v .
       workingDirectory: '$(modulePath)'
       displayName: 'Build'

     - script: go run ./cmd/make test
       workingDirectory: '$(modulePath)'
       displayName: 'Run unit tests'

